import { useState } from "react";
import { eventHandler } from "../../../lib/eventHandler";
import { cn } from "../../../lib/utils";
import type { MCPScanPayload } from "../providers";

export function VulnerabilityItem(
  props: MCPScanPayload & {
    errors: string[];
  },
) {
  const [isViewMore, setIsViewMore] = useState(false);

  const handleViewMoreOrLess = eventHandler(() =>
    setIsViewMore((prev) => !prev),
  );

  return (
    <div className="w-full bg-background rounded-md p-[inherit]">
      <div className="flex justify-between mb-1 lg:mb-2 w-full">
        <div className="w-full">
          <p className="font-medium text-lg">{props.name}</p>
          {props.description && (
            <p
              className={cn(
                "text-sm text-muted-foreground w-full inline-flex",
                isViewMore && "flex-col",
              )}
            >
              <span className={cn("w-full", !isViewMore && "line-clamp-2")}>
                {props.description}
              </span>
              {props.description.length > 190 && (
                <span
                  className={cn(
                    "whitespace-nowrap text-foreground cursor-pointer",
                    !isViewMore && "self-end",
                  )}
                  onClick={handleViewMoreOrLess}
                  onKeyDown={handleViewMoreOrLess}
                >
                  Read {isViewMore ? "less" : "more"}
                </span>
              )}
            </p>
          )}
        </div>
        <p
          className={cn(
            "text-sm px-1.5 pt-0.5 rounded pb-1 leading-none capitalize text-background size-max",
            props.type === "tool"
              ? "bg-success"
              : props.type === "prompt"
                ? "bg-warning"
                : "bg-info",
          )}
        >
          {props.type}
        </p>
      </div>
      <p className="text-sm font-semibold uppercase tracking-tight text-muted-foreground mt-2 inline-flex w-full">
        Issues
        <span className="w-full h-px bg-border self-center ml-3" />
      </p>
      {props.errors.map((error, i) => (
        <div key={`vulnerability-group-error-${i + 1}`}>- {error}</div>
      ))}
    </div>
  );
}
